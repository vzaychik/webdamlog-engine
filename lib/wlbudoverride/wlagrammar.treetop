module WLBud

       # Extensions to webdamlog grammar for access control
       grammar WebdamLogGrammar

      ### Root program ###
      #### Each line is either a comment or it describe either a peer a fact a collection or a rule
      ## Adding policy specification for access control
      rule root
        sep instruction:(fact / collection / rul / peer_dec / comment / policy) sep ';' sep <WLVocabulary>
      end

      ### for rules ###
        #### atom in rules ####
        rule atom
          rproven:provenance? sep rrelation ('@'/'_at_') rpeer sep '(' sep rfields sep ')' sep ']'? <WLAtom>
        end
	  rule provenance
	    hide / preserve
	  end
	  rule hide
	    '[HIDE ' <WLProvHide>
	  end
	  rule preserve
	    '[PRESERVE ' <WLProvPreserve>
	  end

    rule policy
    	'policy ' sep relation_name sep ractype:access_type sep access <WLPolicy>
    end
        rule access_type
    	    read / write / grant
   	end
    	rule read
            'Read ' / 'read ' <WLRead>
	end
    	rule write
            'Write ' / 'write ' <WLWrite>
        end
    	rule grant
            'Grant ' / 'grant ' <WLGrant>
        end
    	rule access
             (relation_name ('@'/'_at_') peer_name / 'ALL' / peer_name) <WLAccess>
        end

   end # grammar WebdamLogGrammar
end # module WLBud
